<edit_modal>
    <div if="{ state.id }" id="{ state.id }" class="modal editModal fade" tabindex="-1" role="dialog" aria-labelledby="{ state.modalLabel }" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title" id="{ state.modalLabel }">
                        <slot name="modal_title"/>
                    </h1>
                    <button type="button" class="close" data-dismiss="modal" aria-label="{ window.gettext('Close') }">
                    <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <slot name="modal_body"/>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="{ cancel }">{ window.gettext("Cancel") }</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="{ save }" disabled="{ props.disableSave }">{ window.gettext("Save") }</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // To respond to bootstrap modal you events you MUST include:
        // jQuery (as $) first, 
        // followed by the main bootstrap js library, and 
        // then the specific bootstrap modal library
        import $ from "jquery";
        import "bootstrap";
        import "bootstrap/js/dist/modal";

        const initialiseStateFromProps = function(props, state) {
            state = state || {};

            state.id = props.modal_id || "editModal";
            state.modalLabel = `${state.id}Label`;
            state.selector = `#${state.id}`;
            state.resultEventName = `${state.id}.result`;
        };

        export default {
            state: {
                result: null,
            },
            onMounted(props, state) {
                initialiseStateFromProps(props, state);

                // To respond to bootstrap modal events properly you must use the full
                // jQuery `.on` event handler syntax
                // and attach the event handler initially to `$(document)`
                // and define the modal itself using the `[selector]` parameter in the `.on` method
                $(document).on("hide.bs.modal", state.selector, this, function (e) {
                    const self = e.data;
                    self.dispatchResult(self.state.result, self.state.resultEventName);
                });
            },
            onUnmounted(props, state) {
                $(document).off("hide.bs.modal", state.selector);
            },
            cancel() {
                this.state.result = "cancel";
            },
            save() {
                this.state.result = "save";
            },
            dispatchResult(result, resultEventName) {
                result = result || "close";                
                console.log(`Dispatching '${resultEventName}': '${result}'`);
                document.dispatchEvent(new CustomEvent(resultEventName, { detail: { result }}));

                // Reset for any future call (unless unmounted first)
                this.state.result = null;
            }
        }
    </script>
</edit_modal>
