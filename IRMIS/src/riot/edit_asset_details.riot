<edit_asset_details>
    <h5>Asset</h5>

    <section>
        <h6>Link code and name</h6>
        <div class="form-group">
            <label>Link Code</label>
            <input class="{ invalidLinkCode && invalidLinkCode.length ? 'danger' : null } form-control inactive" type="text" placeholder="E.g. A01-01" oninput="{ checkLinkCode }">
            <small class="form-text text-muted">Enter link code according to DRBFC standard</small>
            <div if="{ invalidLinkCode && invalidLinkCode.length }" class="invalid-tooltip">
                <ul>
                    <li each="{ message in invalidLinkCode }">{ message }.</li>
                </ul>
        </div>
        </div>
        <div class="form-group">
            <label>Link Start Name</label>
            <input class="form-control inactive" type="text" placeholder="E.g. Dili" oninput="{ checkStartName }">
            <small class="form-text text-muted">Enter the name of the link start location (municipal center, administrative post or nearest suco)</small>
        </div>
        <div class="form-group">
            <label>Link End Name</label>
            <input class="form-control inactive" type="text" placeholder="E.g. Manatuto" oninput="{ checkEndName }">
            <small class="form-text text-muted">Enter the name of the link end location (municipal center, administrative post or nearest suco)</small>
        </div>
    </section>

    <section>
        <h6>Link width and length</h6>
        <div class="form-group">
            <label>Link Length</label>
            <input class="form-control inactive" type="number" placeholder="E.g. 58.7" oninput="{ checkLinkLength }">
            <small class="form-text text-muted">Enter road link length (in Km)</small>
        </div>
        <div class="form-group">
            <label>Carriageway Width</label>
            <input class="form-control inactive" type="number" placeholder="E.g. 5.0" oninput="{ checkCarriagewayWidth }">
            <small class="form-text text-muted">Enter the width (in meters) of the link carriageway</small>
        </div>
    </section>

    <section>
        <h6>Link chainage</h6>
        <div class="form-group">
            <label>Link Start Chainage</label>
            <input class="form-control inactive" type="number" placeholder="E.g. 0+000" oninput="{ checkStartChainage }">
            <small class="form-text text-muted">Enter chainage for link starting point</small>
        </div>
        <div class="form-group">
            <label>Link End Chainage</label>
            <input class="form-control inactive" type="number" placeholder="E.g. 62+410" oninput="{ checkEndChainage }">
            <small class="form-text text-muted">Enter chainage for link ending point</small>
        </div>
    </section>

    <div class="button-wrapper d-flex justify-content-end">
        <button class="btn btn-primary" onclick="{ save }">Save and continue</button>
    </div>

    <script>
        export default {
            checkLinkCode(e) {
                this.linkCode = e.currentTarget.value.trim();
                this.invalidLinkCode = [];
                if (containsWhiteSpaces(this.linkCode)) this.invalidLinkCode.push("Link code can't contain white spaces");
                this.update();
            },
            checkStartName(e) {
                this.startName = e.currentTarget.value;
            },
            checkEndName(e) {
                this.endName = e.currentTarget.value;
            },
            checkLinkLength(e) {
                this.linkLength = e.currentTarget.value;
            },
            checkCarriagewayWidth(e) {
                this.carriagewayWidth = e.currentTarget.value;
            },
            checkStartChainage(e) {
                this.startChainage = e.currentTarget.value;
            },
            checkEndChainage(e) {
                this.endChainage = e.currentTarget.value;
            },
            save(e) {
                const road = {
                    linkCode: this.linkCode,
                    startName: this.startName,
                    endName: this.endName,
                    linkLength: this.linkLength,
                    carriagewayWidth: this.carriagewayWidth,
                    startChainage: this.startChainage,
                    endChainage: this.endChainage,
                };
            }
        };

        function containsWhiteSpaces(text) {
            return /\s/.test(text);
        }
    </script>
</edit_asset_details>
