<edit_location_type>
    <h5>Location</h5>

    <edit_feedback if="{ state.show_feedback }" error="{ state.error }"></edit_feedback>

    <section>
        <div class="form-group">
            <label>{ administrative_areas.display }</label>
            <select class="form-control">
                <option each={ a in administrative_areas.options } value="{ a.id }" selected={ a.name == state.editingRoad.getAdministrativeArea() }>
                    { a.name }
                </option>
            <small class="form-text text-muted">Choose the administrative area of the road</small>
        </div>

        <div class="form-group">
            <label>{ road_types.display }</label>
            <select  class="form-control">
                <option each={ r in road_types.options } value="{ r[0] }" selected={ r[0] == state.editingRoad.getRoadType() }>
                    { r[1] }
                </option>
            </select>
            <small class="form-text text-muted">Choose the administrative class of the road</small>
        </div>
    </section>

    <div class="button-wrapper d-flex justify-content-end">
        <button class="btn btn-primary" onclick="{ save }">Save and continue</button>
    </div>

    <script>
        import { saveRoad } from "../roadManager";
        import Edit_Feedback from './edit_feedback.riot';
        import { Road } from "../../protobuf/roads_pb";

        export default {
            onBeforeMount(props, state) {
                state.editingRoad = Road.deserializeBinary(props.road.serializeBinary());
            },
            save(e) {
                var save_button = e.currentTarget;
                save_button.disabled = true;
                setTimeout(() => save_button.disabled = false, 1000); // An example of what to call when the (unimplemented) Promise is resolved

                saveRoad(this.state.editingRoad).then((response) => {
                    if (response) { this.state.error = false; }
                    else { this.state.error = true; }
                }).catch(err => {
                    this.state.error = true;
                }).finally(() => {
                    this.state.show_feedback = true;
                    this.update()
                });
            },
            administrative_areas: window.road_schema.administrative_area,
            road_types: window.road_schema.road_type
        }
    </script>
</edit_location_type>
