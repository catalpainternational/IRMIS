<edit_location_type>
    <h5>{ window.gettext("Location") }</h5>

    <edit_feedback if="{ state.show_feedback }" error="{ state.error }"></edit_feedback>

    <section>
        <div class="form-group">
            <label>{ administrative_areas.display }</label>
            <select class="{ state.administrativeArea != '' ? '' : 'inactive' } form-control" onchange="{ checkAdministrativeArea }">
                <option value="">{ window.gettext("Select an Administrative Area") }</option>
                <template each="{ area in administrative_areas.options }">
                    <option if="{ area.id == state.administrativeArea }" value="{ area.id }" selected>{ area.name }</option>
                    <option if="{ area.id != state.administrativeArea }" value="{ area.id }">{ area.name }</option>
                </template>
            </select>
            <small class="form-text text-muted">{ window.gettext("Choose the administrative area of the road") }</small>
        </div>
    </section>

    <section>
        <div class="form-group">
            <label>{ road_types.display }</label>
            <select class="{ state.roadType != '' ? '' : 'inactive' } form-control" onchange="{ checkRoadType }">
                <option value="">{ window.gettext("Select a Road Type") }</option>
                <template each="{ type in road_types.options }">
                    <option if="{ type[0] === state.roadType }" value="{ type[0] }" selected>{ type[1] }</option>
                    <option if="{ type[0] !== state.roadType }" value="{ type[0] }">{ type[1] }</option>
                </template>
            </select>
            <small class="form-text text-muted">{ window.gettext("Choose the administrative class of the road") }</small>
        </div>
    </section>

    <div class="button-wrapper d-flex justify-content-end">
        <button class="btn btn-primary" onclick="{ save }">{ window.gettext("Save and continue") }</button>
    </div>

    <script>
        import { saveRoad } from "../roadManager";
        import Edit_Feedback from './edit_feedback.riot';

        export default {
            onBeforeMount(props, state) {
                state.editingRoad = props.road.cloneMessage();
                state.administrativeArea = state.editingRoad.getAdministrativeArea();
                state.roadType = state.editingRoad.getRoadType();
            },
            save(e) {
                var save_button = e.currentTarget;
                save_button.disabled = true;

                saveRoad(this.state.editingRoad).then((response) => {
                    if (response) { this.state.error = false; }
                    else { this.state.error = true; }
                }).catch(err => {
                    this.state.error = true;
                }).finally(() => {
                    save_button.disabled = false
                    this.state.show_feedback = true;
                    this.update()
                });
            },
            checkAdministrativeArea(e) {
                this.state.administrativeArea = e.currentTarget.value;
                this.state.editingRoad.setAdministrativeArea(this.state.administrativeArea);
                this.update();
            },
            checkRoadType(e) {
                this.state.roadType = e.currentTarget.value;
                this.state.editingRoad.setRoadType(this.state.roadType);
                this.update();
            },
            administrative_areas: window.road_schema.administrative_area,
            road_types: window.road_schema.road_type,
        }
    </script>
</edit_location_type>
