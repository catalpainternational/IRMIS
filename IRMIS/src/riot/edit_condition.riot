<edit_condition>
    <h5>{ window.gettext ("Condition") }</h5>

    <section>
        <div class="form-group">
            <label>{ conditions.display }</label>
            <small class="form-text text-muted">{ props.getHelpText("surface_condition") }</small>
            <ul class="surface-condition">
                <li each="{ condition in conditions.options }" data-condition="{ condition[0] }" onclick="{ checkSurfaceCondition }">
                    <span class="{ condition[0] == props.road.getSurfaceCondition() ? 'active' : ''  } radio image"></span>
                    { condition[1] }
                </li>
            </ul>
        </div>
        <data_table table_id={this.table_id} columns={this.table_columns} getHelpText={props.getHelpText} pendingRows={this.pendingRows}></data_table>
    </section>

    <div class="button-wrapper d-flex justify-content-end">
        <button class="btn btn-primary" onclick="{ save }" disabled="{ props.saving }">{ window.gettext("Save and continue") }</button>
    </div>

    <script>
        import Data_Table from "./data_table.riot";
        import { getFieldName } from "../road";

        export default {
            save(e) {
                this.props.onSave();
            },
            checkSurfaceCondition(e) {
                this.props.road.setSurfaceCondition(e.currentTarget.dataset.condition);
                this.update();
            },
            conditions: window.road_schema.surface_condition,
            table_id: "surface-condition-table",
            table_columns: [
                {
                    title: "Chainage start", // getFieldName("segment_start_chainage"),
                    data: "segmentStartChainage",
                    defaultContent: "",
                },
                {
                    title: "Chainage end", // getFieldName("segment_end_chainage"),
                    data: "segmentEndChainage",
                    defaultContent: "",
                },
                {
                    title: "Surface condition", // getFieldName("surface_condition"),
                    data: "surfaceCondition",
                    defaultContent: "",
                },
                {
                    title: "Survey date", // getFieldName("survey_date"),
                    data: "surveyDate",
                    defaultContent: "",
                },
                {
                    title: "Added by", // getFieldName("survey_added_by"),
                    data: "surveyAddedBy",
                    defaultContent: "",
                },
                {
                    title: "Source", // getFieldName("survey_source"),
                    data: "surveySource",
                    defaultContent: "",
                },
            ],
            pendingRows: [{
                getId: () => { return 1; },
                segmentStartChainage: "0+000",
                segmentEndChainage: "5+300",
                surfaceCondition: "Poor",
                surveyDate: Date.now(),
                surveyAddedBy: "Jose Soares",
                surveySource: "Excel",
            }]
        }
    </script>
</edit_condition>
