// source: structure.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.assets.Bridge', null, global);
goog.exportSymbol('proto.assets.Culvert', null, global);
goog.exportSymbol('proto.assets.Point', null, global);
goog.exportSymbol('proto.assets.Structures', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.Point = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.Point, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.Point.displayName = 'proto.assets.Point';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.Structures = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.assets.Structures.repeatedFields_, null);
};
goog.inherits(proto.assets.Structures, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.Structures.displayName = 'proto.assets.Structures';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.Bridge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.Bridge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.Bridge.displayName = 'proto.assets.Bridge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.Culvert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.Culvert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.Culvert.displayName = 'proto.assets.Culvert';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.Point.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.Point.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.Point} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Point.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.Point}
 */
proto.assets.Point.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.Point;
  return proto.assets.Point.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.Point} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.Point}
 */
proto.assets.Point.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.Point.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.Point.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.Point} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Point.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.assets.Point.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Point} returns this
 */
proto.assets.Point.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.assets.Point.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Point} returns this
 */
proto.assets.Point.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.assets.Structures.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.Structures.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.Structures.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.Structures} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Structures.toObject = function(includeInstance, msg) {
  var f, obj = {
    bridgesList: jspb.Message.toObjectList(msg.getBridgesList(),
    proto.assets.Bridge.toObject, includeInstance),
    culvertsList: jspb.Message.toObjectList(msg.getCulvertsList(),
    proto.assets.Culvert.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.Structures}
 */
proto.assets.Structures.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.Structures;
  return proto.assets.Structures.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.Structures} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.Structures}
 */
proto.assets.Structures.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.assets.Bridge;
      reader.readMessage(value,proto.assets.Bridge.deserializeBinaryFromReader);
      msg.addBridges(value);
      break;
    case 2:
      var value = new proto.assets.Culvert;
      reader.readMessage(value,proto.assets.Culvert.deserializeBinaryFromReader);
      msg.addCulverts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.Structures.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.Structures.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.Structures} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Structures.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBridgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.assets.Bridge.serializeBinaryToWriter
    );
  }
  f = message.getCulvertsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.assets.Culvert.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Bridge bridges = 1;
 * @return {!Array<!proto.assets.Bridge>}
 */
proto.assets.Structures.prototype.getBridgesList = function() {
  return /** @type{!Array<!proto.assets.Bridge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.assets.Bridge, 1));
};


/**
 * @param {!Array<!proto.assets.Bridge>} value
 * @return {!proto.assets.Structures} returns this
*/
proto.assets.Structures.prototype.setBridgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.assets.Bridge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.assets.Bridge}
 */
proto.assets.Structures.prototype.addBridges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.assets.Bridge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.assets.Structures} returns this
 */
proto.assets.Structures.prototype.clearBridgesList = function() {
  return this.setBridgesList([]);
};


/**
 * repeated Culvert culverts = 2;
 * @return {!Array<!proto.assets.Culvert>}
 */
proto.assets.Structures.prototype.getCulvertsList = function() {
  return /** @type{!Array<!proto.assets.Culvert>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.assets.Culvert, 2));
};


/**
 * @param {!Array<!proto.assets.Culvert>} value
 * @return {!proto.assets.Structures} returns this
*/
proto.assets.Structures.prototype.setCulvertsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.assets.Culvert=} opt_value
 * @param {number=} opt_index
 * @return {!proto.assets.Culvert}
 */
proto.assets.Structures.prototype.addCulverts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.assets.Culvert, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.assets.Structures} returns this
 */
proto.assets.Structures.prototype.clearCulvertsList = function() {
  return this.setCulvertsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.Bridge.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.Bridge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.Bridge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Bridge.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    roadId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dateCreated: (f = msg.getDateCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastModified: (f = msg.getLastModified()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    structureCode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    structureName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    assetClass: jspb.Message.getFieldWithDefault(msg, 7, ""),
    administrativeArea: jspb.Message.getFieldWithDefault(msg, 8, ""),
    roadCode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    constructionYear: jspb.Message.getFieldWithDefault(msg, 10, 0),
    length: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    width: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    chainage: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    structureType: jspb.Message.getFieldWithDefault(msg, 14, ""),
    material: jspb.Message.getFieldWithDefault(msg, 15, ""),
    protectionUpstream: jspb.Message.getFieldWithDefault(msg, 16, ""),
    protectionDownstream: jspb.Message.getFieldWithDefault(msg, 17, ""),
    geomPoint: (f = msg.getGeomPoint()) && proto.assets.Point.toObject(includeInstance, f),
    geojsonId: jspb.Message.getFieldWithDefault(msg, 19, 0),
    riverName: jspb.Message.getFieldWithDefault(msg, 28, ""),
    numberSpans: jspb.Message.getFieldWithDefault(msg, 29, 0),
    spanLength: jspb.Message.getFloatingPointFieldWithDefault(msg, 30, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.Bridge}
 */
proto.assets.Bridge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.Bridge;
  return proto.assets.Bridge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.Bridge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.Bridge}
 */
proto.assets.Bridge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRoadId(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDateCreated(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastModified(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStructureCode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStructureName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetClass(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdministrativeArea(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoadCode(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConstructionYear(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLength(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWidth(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setChainage(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setStructureType(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterial(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtectionUpstream(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtectionDownstream(value);
      break;
    case 18:
      var value = new proto.assets.Point;
      reader.readMessage(value,proto.assets.Point.deserializeBinaryFromReader);
      msg.setGeomPoint(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGeojsonId(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setRiverName(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberSpans(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSpanLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.Bridge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.Bridge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.Bridge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Bridge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRoadId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDateCreated();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastModified();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStructureCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStructureName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAssetClass();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAdministrativeArea();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRoadCode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getConstructionYear();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getLength();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getChainage();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getStructureType();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getMaterial();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getProtectionUpstream();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getProtectionDownstream();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getGeomPoint();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.assets.Point.serializeBinaryToWriter
    );
  }
  f = message.getGeojsonId();
  if (f !== 0) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = message.getRiverName();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getNumberSpans();
  if (f !== 0) {
    writer.writeInt32(
      29,
      f
    );
  }
  f = message.getSpanLength();
  if (f !== 0.0) {
    writer.writeFloat(
      30,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.assets.Bridge.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 road_id = 2;
 * @return {number}
 */
proto.assets.Bridge.prototype.getRoadId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setRoadId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp date_created = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.assets.Bridge.prototype.getDateCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.assets.Bridge} returns this
*/
proto.assets.Bridge.prototype.setDateCreated = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.clearDateCreated = function() {
  return this.setDateCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.Bridge.prototype.hasDateCreated = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp last_modified = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.assets.Bridge.prototype.getLastModified = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.assets.Bridge} returns this
*/
proto.assets.Bridge.prototype.setLastModified = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.clearLastModified = function() {
  return this.setLastModified(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.Bridge.prototype.hasLastModified = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string structure_code = 5;
 * @return {string}
 */
proto.assets.Bridge.prototype.getStructureCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setStructureCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string structure_name = 6;
 * @return {string}
 */
proto.assets.Bridge.prototype.getStructureName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setStructureName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string asset_class = 7;
 * @return {string}
 */
proto.assets.Bridge.prototype.getAssetClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setAssetClass = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string administrative_area = 8;
 * @return {string}
 */
proto.assets.Bridge.prototype.getAdministrativeArea = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setAdministrativeArea = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string road_code = 9;
 * @return {string}
 */
proto.assets.Bridge.prototype.getRoadCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setRoadCode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 construction_year = 10;
 * @return {number}
 */
proto.assets.Bridge.prototype.getConstructionYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setConstructionYear = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional float length = 11;
 * @return {number}
 */
proto.assets.Bridge.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setLength = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float width = 12;
 * @return {number}
 */
proto.assets.Bridge.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setWidth = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float chainage = 13;
 * @return {number}
 */
proto.assets.Bridge.prototype.getChainage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setChainage = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional string structure_type = 14;
 * @return {string}
 */
proto.assets.Bridge.prototype.getStructureType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setStructureType = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string material = 15;
 * @return {string}
 */
proto.assets.Bridge.prototype.getMaterial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setMaterial = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string protection_upstream = 16;
 * @return {string}
 */
proto.assets.Bridge.prototype.getProtectionUpstream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setProtectionUpstream = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string protection_downstream = 17;
 * @return {string}
 */
proto.assets.Bridge.prototype.getProtectionDownstream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setProtectionDownstream = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional Point geom_point = 18;
 * @return {?proto.assets.Point}
 */
proto.assets.Bridge.prototype.getGeomPoint = function() {
  return /** @type{?proto.assets.Point} */ (
    jspb.Message.getWrapperField(this, proto.assets.Point, 18));
};


/**
 * @param {?proto.assets.Point|undefined} value
 * @return {!proto.assets.Bridge} returns this
*/
proto.assets.Bridge.prototype.setGeomPoint = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.clearGeomPoint = function() {
  return this.setGeomPoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.Bridge.prototype.hasGeomPoint = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint32 geojson_id = 19;
 * @return {number}
 */
proto.assets.Bridge.prototype.getGeojsonId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setGeojsonId = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional string river_name = 28;
 * @return {string}
 */
proto.assets.Bridge.prototype.getRiverName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setRiverName = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional int32 number_spans = 29;
 * @return {number}
 */
proto.assets.Bridge.prototype.getNumberSpans = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setNumberSpans = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional float span_length = 30;
 * @return {number}
 */
proto.assets.Bridge.prototype.getSpanLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 30, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Bridge} returns this
 */
proto.assets.Bridge.prototype.setSpanLength = function(value) {
  return jspb.Message.setProto3FloatField(this, 30, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.Culvert.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.Culvert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.Culvert} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Culvert.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    roadId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dateCreated: (f = msg.getDateCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastModified: (f = msg.getLastModified()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    structureCode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    structureName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    assetClass: jspb.Message.getFieldWithDefault(msg, 7, ""),
    administrativeArea: jspb.Message.getFieldWithDefault(msg, 8, ""),
    roadCode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    constructionYear: jspb.Message.getFieldWithDefault(msg, 10, 0),
    length: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    width: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    chainage: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    structureType: jspb.Message.getFieldWithDefault(msg, 14, ""),
    material: jspb.Message.getFieldWithDefault(msg, 15, ""),
    protectionUpstream: jspb.Message.getFieldWithDefault(msg, 16, ""),
    protectionDownstream: jspb.Message.getFieldWithDefault(msg, 17, ""),
    geomPoint: (f = msg.getGeomPoint()) && proto.assets.Point.toObject(includeInstance, f),
    geojsonId: jspb.Message.getFieldWithDefault(msg, 19, 0),
    height: jspb.Message.getFloatingPointFieldWithDefault(msg, 28, 0.0),
    numberCells: jspb.Message.getFieldWithDefault(msg, 29, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.Culvert}
 */
proto.assets.Culvert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.Culvert;
  return proto.assets.Culvert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.Culvert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.Culvert}
 */
proto.assets.Culvert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRoadId(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDateCreated(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastModified(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStructureCode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStructureName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetClass(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdministrativeArea(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoadCode(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConstructionYear(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLength(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWidth(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setChainage(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setStructureType(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterial(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtectionUpstream(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtectionDownstream(value);
      break;
    case 18:
      var value = new proto.assets.Point;
      reader.readMessage(value,proto.assets.Point.deserializeBinaryFromReader);
      msg.setGeomPoint(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGeojsonId(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHeight(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberCells(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.Culvert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.Culvert.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.Culvert} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Culvert.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRoadId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDateCreated();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastModified();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStructureCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStructureName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAssetClass();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAdministrativeArea();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRoadCode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getConstructionYear();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getLength();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getChainage();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getStructureType();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getMaterial();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getProtectionUpstream();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getProtectionDownstream();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getGeomPoint();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.assets.Point.serializeBinaryToWriter
    );
  }
  f = message.getGeojsonId();
  if (f !== 0) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0.0) {
    writer.writeFloat(
      28,
      f
    );
  }
  f = message.getNumberCells();
  if (f !== 0) {
    writer.writeInt32(
      29,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.assets.Culvert.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 road_id = 2;
 * @return {number}
 */
proto.assets.Culvert.prototype.getRoadId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setRoadId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp date_created = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.assets.Culvert.prototype.getDateCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.assets.Culvert} returns this
*/
proto.assets.Culvert.prototype.setDateCreated = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.clearDateCreated = function() {
  return this.setDateCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.Culvert.prototype.hasDateCreated = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp last_modified = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.assets.Culvert.prototype.getLastModified = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.assets.Culvert} returns this
*/
proto.assets.Culvert.prototype.setLastModified = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.clearLastModified = function() {
  return this.setLastModified(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.Culvert.prototype.hasLastModified = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string structure_code = 5;
 * @return {string}
 */
proto.assets.Culvert.prototype.getStructureCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setStructureCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string structure_name = 6;
 * @return {string}
 */
proto.assets.Culvert.prototype.getStructureName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setStructureName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string asset_class = 7;
 * @return {string}
 */
proto.assets.Culvert.prototype.getAssetClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setAssetClass = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string administrative_area = 8;
 * @return {string}
 */
proto.assets.Culvert.prototype.getAdministrativeArea = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setAdministrativeArea = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string road_code = 9;
 * @return {string}
 */
proto.assets.Culvert.prototype.getRoadCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setRoadCode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 construction_year = 10;
 * @return {number}
 */
proto.assets.Culvert.prototype.getConstructionYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setConstructionYear = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional float length = 11;
 * @return {number}
 */
proto.assets.Culvert.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setLength = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float width = 12;
 * @return {number}
 */
proto.assets.Culvert.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setWidth = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float chainage = 13;
 * @return {number}
 */
proto.assets.Culvert.prototype.getChainage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setChainage = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional string structure_type = 14;
 * @return {string}
 */
proto.assets.Culvert.prototype.getStructureType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setStructureType = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string material = 15;
 * @return {string}
 */
proto.assets.Culvert.prototype.getMaterial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setMaterial = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string protection_upstream = 16;
 * @return {string}
 */
proto.assets.Culvert.prototype.getProtectionUpstream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setProtectionUpstream = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string protection_downstream = 17;
 * @return {string}
 */
proto.assets.Culvert.prototype.getProtectionDownstream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setProtectionDownstream = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional Point geom_point = 18;
 * @return {?proto.assets.Point}
 */
proto.assets.Culvert.prototype.getGeomPoint = function() {
  return /** @type{?proto.assets.Point} */ (
    jspb.Message.getWrapperField(this, proto.assets.Point, 18));
};


/**
 * @param {?proto.assets.Point|undefined} value
 * @return {!proto.assets.Culvert} returns this
*/
proto.assets.Culvert.prototype.setGeomPoint = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.clearGeomPoint = function() {
  return this.setGeomPoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.Culvert.prototype.hasGeomPoint = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint32 geojson_id = 19;
 * @return {number}
 */
proto.assets.Culvert.prototype.getGeojsonId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setGeojsonId = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional float height = 28;
 * @return {number}
 */
proto.assets.Culvert.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 28, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setHeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 28, value);
};


/**
 * optional int32 number_cells = 29;
 * @return {number}
 */
proto.assets.Culvert.prototype.getNumberCells = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Culvert} returns this
 */
proto.assets.Culvert.prototype.setNumberCells = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


goog.object.extend(exports, proto.assets);
